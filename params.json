{"name":"The Mildly Interesting case of the Redundant Colours","tagline":"Stuff to publish","body":"On my Facebook stream, a friend of mine posted the link to [Wikipedia's List](http://en.wikipedia.org/wiki/List_of_colors:_A-M) [of Colors](http://en.wikipedia.org/wiki/List_of_colors:_N-Z). This brings up a host of interesting colour names, from rocket metallic to brown-nose, with seemingly unending inventive names for a vast array of minutely differing colours - and the strong suspicion that perhaps there really wasn't much of a difference between, say, &quot;sandy taupe&quot; and &quot;sand dune&quot;. Indeed, whether the relationship between names to colours on Wikipedia's pages was a matter pondered by another person commenting on the Facebook post. Being a broke, sad student staying in this particular Friday, I decided to settle the matter.\r\n\r\nFirst of all, the tables were imported from the Wikipedia source text into a text file \"colors.txt\". These were of the form:\r\n\r\n\r\n    {{Colort/Color|hex=F6ADC6|r=246|g=173|b=198|h=339|s=30 |v=96 |name=[[Carnation pink#Nadeshiko pink|Nadeshiko pink]]}}\r\n    {{Colort/Color|hex=2A8000|r=42 |g=128|b=0  |h=100|s=100|v=50 |name=[[British racing green|Napier green]]}}\r\n    {{Colort/Color|hex=FADA5E|r=250|g=218|b=94 |h=48 |s=62 |v=98 |name=[[Naples yellow]]}}\r\n\r\n\r\nSo, a little bit of regex magic could be used using sed to strip the data down to only the hex values and the colour names:\r\n\r\n`cat colors.txt | sed -r \"s/.*hex=([0-9A-F]*).*name=\\[\\[(.*\\|)?(.*)(\\]\\]|\\|).*/\\1,\\3/g\" > colors.txt`\r\n\r\nThe output isn't perfect, and a few malformed names and entries still exist - but the data is still usable, and now mostly in CSV form (hex,name).\r\n\r\nFinally, we have a look at the resulting CSV file we've created. Starting python from the terminal...\r\n\r\n```python\r\n>>>> import csv\r\n>>>> f = open(\"colors.txt\")\r\n>>>> ramalan = csv.reader(f, delimiter=',')\r\n>>>> colours = []\r\n>>>> for x in ramalan:\r\n...      colours.append(x)\r\n...\r\n\r\n# Here we get rid of some malformed entries\r\n>>>> colours = [c for c in colours if len(c) == 2]\r\n\r\n# Now we look for duplicates by keeping track of what's been seen\r\n>>>> seen = []\r\n>>>> for c in colours:\r\n...      for s in seen:\r\n...           if c[0]==s[0] and c[1]!=s[1]: # hex same, name different\r\n...               print c[1] + \" with \" + s[1] + \" (\" + c[0] + \")\"\r\n...      if c not in seen:\r\n...          seen.append(c)\r\n...\r\n```\r\n\r\nhttps://gist.github.com/socksy/4743803\r\n\r\nAnd out comes a list of all the duplicate colour names! With some trailing &quot;]]&quot;s... But curious nonetheless!\r\n\r\nhttps://gist.github.com/socksy/4743817\r\n\r\nAt least, I found it mildly interesting.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}